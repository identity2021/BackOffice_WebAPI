// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using BackOffice_WebAPI;

#nullable disable

namespace BackOffice_WebAPI.Models
{
    public partial class PCM_KS_BOContext : DbContext
    {
       

        public PCM_KS_BOContext(DbContextOptions<PCM_KS_BOContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Article> Articles { get; set; }
        public virtual DbSet<F_ARTICLE> F_ARTICLEs { get; set; }
        public virtual DbSet<F_CATALOGUEV> F_CATALOGUEVs { get; set; }
        public virtual DbSet<F_COLLABORATEUR> F_COLLABORATEURs { get; set; }
        public virtual DbSet<F_COMPTET> F_COMPTETs { get; set; }
        public virtual DbSet<F_DOCENTETE> F_DOCENTETEs { get; set; }
        public virtual DbSet<F_DOCLIGNE> F_DOCLIGNEs { get; set; }
        public virtual DbSet<N1Clt> N1Clts { get; set; }
        public virtual DbSet<N4> N4s { get; set; }
        public virtual DbSet<VM_Collaborateur> VM_Collaborateurs { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "French_CI_AS");

            modelBuilder.Entity<Article>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Article");

                entity.Property(e => e.CodeArt)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.Conditionnement)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Designation)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.N1)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.N2)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.N3)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.N4)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PrixVente).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.Quantite).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.TypeCategorie)
                    .HasMaxLength(35)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_ARTICLE>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("PK_CBMARQ_F_ARTICLE");

                entity.ToTable("F_ARTICLE");

                entity.HasIndex(e => e.AR_Substitut, "FKIA_F_ARTICLE_AR_Ref");

                entity.HasIndex(e => e.cbCL_No1, "FKIA_F_ARTICLE_CL_No1");

                entity.HasIndex(e => e.cbCL_No2, "FKIA_F_ARTICLE_CL_No2");

                entity.HasIndex(e => e.cbCL_No3, "FKIA_F_ARTICLE_CL_No3");

                entity.HasIndex(e => e.cbCL_No4, "FKIA_F_ARTICLE_CL_No4");

                entity.HasIndex(e => e.RP_CodeDefaut, "FKIA_F_ARTICLE_RP_Code");

                entity.HasIndex(e => e.cbAR_CodeBarre, "IAR_CBARRE");

                entity.HasIndex(e => new { e.cbAR_Design, e.cbAR_Ref }, "IAR_DESIGN");

                entity.HasIndex(e => new { e.AR_Nomencl, e.cbAR_Design, e.cbAR_Ref }, "IAR_DESIGNNOMENCL");

                entity.HasIndex(e => new { e.AR_Sommeil, e.cbAR_Design, e.cbAR_Ref }, "IAR_DESIGNSOM");

                entity.HasIndex(e => e.cbAR_EdiCode, "IAR_EDICODE");

                entity.HasIndex(e => new { e.CL_No1, e.cbAR_Ref }, "IAR_EMPL1");

                entity.HasIndex(e => new { e.CL_No2, e.cbAR_Ref }, "IAR_EMPL2");

                entity.HasIndex(e => new { e.CL_No3, e.cbAR_Ref }, "IAR_EMPL3");

                entity.HasIndex(e => new { e.CL_No4, e.cbAR_Ref }, "IAR_EMPL4");

                entity.HasIndex(e => new { e.cbFA_CodeFamille, e.cbAR_Ref }, "IAR_FAMILLE");

                entity.HasIndex(e => new { e.AR_Sommeil, e.cbFA_CodeFamille, e.cbAR_Ref }, "IAR_FAMILLESOM");

                entity.HasIndex(e => e.cbAR_Raccourci, "IAR_RACC");

                entity.HasIndex(e => e.cbAR_Ref, "IAR_REF")
                    .IsUnique();

                entity.HasIndex(e => new { e.AR_Nomencl, e.cbAR_Ref }, "IAR_REFNOMENCL");

                entity.HasIndex(e => new { e.AR_Sommeil, e.cbAR_Ref }, "IAR_REFSOM");

                entity.HasIndex(e => new { e.AR_Sommeil, e.CL_No1, e.cbAR_Ref }, "IAR_SOMEMPL1");

                entity.HasIndex(e => new { e.AR_Sommeil, e.CL_No2, e.cbAR_Ref }, "IAR_SOMEMPL2");

                entity.HasIndex(e => new { e.AR_Sommeil, e.CL_No3, e.cbAR_Ref }, "IAR_SOMEMPL3");

                entity.HasIndex(e => new { e.AR_Sommeil, e.CL_No4, e.cbAR_Ref }, "IAR_SOMEMPL4");

                entity.HasIndex(e => e.cbAR_Substitut, "IAR_SUBSTITUT");

                entity.HasIndex(e => new { e.AR_Type, e.cbAR_Ref }, "IAR_TYPEREF");

                entity.HasIndex(e => e.AR_Ref, "UKA_F_ARTICLE_AR_Ref")
                    .IsUnique();

                entity.Property(e => e.ACODE)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.AR_CodeBarre)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AR_CodeFiscal)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Coef).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_CoefNouv).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_CoutStd).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_DateApplication).HasColumnType("datetime");

                entity.Property(e => e.AR_DateModif).HasColumnType("datetime");

                entity.Property(e => e.AR_Design)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.AR_EdiCode)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Frais01FR_Denomination)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Frais01FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais01FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais01FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais02FR_Denomination)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Frais02FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais02FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais02FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais03FR_Denomination)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Frais03FR_Rem01REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais03FR_Rem02REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Frais03FR_Rem03REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Langue1)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Langue2)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.AR_PUNet).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Pays)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Photo)
                    .HasMaxLength(259)
                    .IsUnicode(false);

                entity.Property(e => e.AR_PoidsBrut).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_PoidsNet).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_PrixAch).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_PrixAchNouv).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_PrixVen).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_PrixVenNouv).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_QteComp).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_QteOperatoire).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.AR_Raccourci)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Ref)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Stat01)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Stat02)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Stat03)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Stat04)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Stat05)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Substitut)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.COULEUR)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Colisage).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.FA_CodeFamille)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Fournisseur)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.Marque)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.PROMOTION)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.PVU).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.PrixPu).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.Promo)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.RP_CodeDefaut)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.STATUT)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Stock_OL)
                    .HasColumnType("numeric(24, 6)")
                    .HasColumnName("Stock OL");

                entity.Property(e => e.cbAR_CodeBarre)
                    .HasMaxLength(20)
                    .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AR_CodeBarre],'')))", false);

                entity.Property(e => e.cbAR_Design)
                    .HasMaxLength(70)
                    .HasComputedColumnSql("(CONVERT([varbinary](70),isnull([AR_Design],'')))", false);

                entity.Property(e => e.cbAR_EdiCode)
                    .HasMaxLength(46)
                    .HasComputedColumnSql("(CONVERT([varbinary](46),isnull([AR_EdiCode],'')))", false);

                entity.Property(e => e.cbAR_Raccourci)
                    .HasMaxLength(8)
                    .HasComputedColumnSql("(CONVERT([varbinary](8),isnull([AR_Raccourci],'')))", false);

                entity.Property(e => e.cbAR_Ref)
                    .HasMaxLength(20)
                    .HasComputedColumnSql("(CONVERT([varbinary](20),[AR_Ref]))", false);

                entity.Property(e => e.cbAR_Substitut)
                    .HasMaxLength(20)
                    .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AR_Substitut],'')))", false);

                entity.Property(e => e.cbCreateur)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.cbCreation).HasColumnType("datetime");

                entity.Property(e => e.cbFA_CodeFamille)
                    .HasMaxLength(12)
                    .HasComputedColumnSql("(CONVERT([varbinary](12),[FA_CodeFamille]))", false);

                entity.Property(e => e.cbModification).HasColumnType("datetime");

                entity.HasOne(d => d.AR_SubstitutNavigation)
                    .WithMany(p => p.InverseAR_SubstitutNavigation)
                    .HasPrincipalKey(p => p.AR_Ref)
                    .HasForeignKey(d => d.AR_Substitut)
                    .HasConstraintName("FKA_F_ARTICLE_AR_Ref");
            });

            modelBuilder.Entity<F_CATALOGUEV>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("F_CATALOGUEV");

                entity.Property(e => e.name)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F_COLLABORATEUR>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("PK_CBMARQ_F_COLLABORATEUR");

                entity.ToTable("F_COLLABORATEUR");

                entity.HasIndex(e => e.cbPROT_No, "FKIA_F_COLLABORATEUR_PROT_No");

                entity.HasIndex(e => new { e.CO_Acheteur, e.cbCO_Nom, e.cbCO_Prenom }, "ICO_ACHETEUR");

                entity.HasIndex(e => new { e.CO_Caissier, e.cbCO_Nom, e.cbCO_Prenom }, "ICO_CAISSIER");

                entity.HasIndex(e => new { e.CO_ChargeRecouvr, e.cbCO_Nom, e.cbCO_Prenom }, "ICO_CHARGERECOUVR");

                entity.HasIndex(e => e.CO_No, "ICO_CONO")
                    .IsUnique();

                entity.HasIndex(e => new { e.CO_Financier, e.cbCO_Nom, e.cbCO_Prenom }, "ICO_FINANCIER");

                entity.HasIndex(e => new { e.cbCO_Fonction, e.cbCO_Nom, e.cbCO_Prenom }, "ICO_FONCTION");

                entity.HasIndex(e => e.cbCO_Matricule, "ICO_MATRICULE");

                entity.HasIndex(e => new { e.cbCO_Nom, e.cbCO_Prenom }, "ICO_NOM")
                    .IsUnique();

                entity.HasIndex(e => new { e.CO_Receptionnaire, e.cbCO_Nom, e.cbCO_Prenom }, "ICO_RECEPTIONNAIRE");

                entity.HasIndex(e => e.PROT_No, "ICO_UTILISATEUR");

                entity.HasIndex(e => new { e.CO_Vendeur, e.cbCO_Nom, e.cbCO_Prenom }, "ICO_VENDEUR");

                entity.Property(e => e.CO_Adresse)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CO_CodePostal)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.CO_CodeRegion)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Complement)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CO_EMail)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Facebook)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Fonction)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CO_LinkedIn)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Matricule)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.CO_No).IsRequired();

                entity.Property(e => e.CO_Nom)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Pays)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Prenom)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Service)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Skype)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CO_TelPortable)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Telecopie)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Telephone)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CO_Ville)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.cbCO_Fonction)
                    .HasMaxLength(36)
                    .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([CO_Fonction],'')))", false);

                entity.Property(e => e.cbCO_Matricule)
                    .HasMaxLength(12)
                    .HasComputedColumnSql("(CONVERT([varbinary](12),isnull([CO_Matricule],'')))", false);

                entity.Property(e => e.cbCO_Nom)
                    .HasMaxLength(36)
                    .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([CO_Nom],'')))", false);

                entity.Property(e => e.cbCO_Prenom)
                    .HasMaxLength(36)
                    .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([CO_Prenom],'')))", false);

                entity.Property(e => e.cbCreateur)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.cbCreation)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([datetime2](0),getdate()))");

                entity.Property(e => e.cbModification)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([datetime2](0),getdate()))");
            });

            modelBuilder.Entity<F_COMPTET>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("PK_CBMARQ_F_COMPTET");

                entity.ToTable("F_COMPTET");

                entity.HasIndex(e => new { e.N_Analytique, e.CA_Num }, "FKIA_F_COMPTET_CA_Num");

                entity.HasIndex(e => new { e.N_AnalytiqueIFRS, e.CA_NumIFRS }, "FKIA_F_COMPTET_CA_NumIFRS");

                entity.HasIndex(e => e.CG_NumPrinc, "FKIA_F_COMPTET_CG_Num");

                entity.HasIndex(e => e.cbCO_No, "FKIA_F_COMPTET_CO_No");

                entity.HasIndex(e => e.cbEB_No, "FKIA_F_COMPTET_EB_No");

                entity.HasIndex(e => e.cbMR_No, "FKIA_F_COMPTET_MR_No");

                entity.HasIndex(e => e.cbPI_NoEchange, "FKIA_F_COMPTET_PI_NoEchange");

                entity.HasIndex(e => new { e.N_Analytique, e.cbCA_Num, e.cbCT_Num }, "ICT_CANUM");

                entity.HasIndex(e => new { e.N_Analytique, e.cbCA_Num, e.CT_Type, e.cbCT_Num }, "ICT_CANUMTYPE");

                entity.HasIndex(e => e.cbCG_NumPrinc, "ICT_CGNUMPRINC");

                entity.HasIndex(e => new { e.cbCT_Classement, e.cbCT_Num }, "ICT_CLASS");

                entity.HasIndex(e => new { e.cbCT_CodePostal, e.cbCT_Num }, "ICT_CODEPOSTAL");

                entity.HasIndex(e => e.CO_No, "ICT_CONO");

                entity.HasIndex(e => e.DE_No, "ICT_DENO");

                entity.HasIndex(e => e.cbCT_Num, "ICT_NUM")
                    .IsUnique();

                entity.HasIndex(e => e.cbCT_NumCentrale, "ICT_NUMCENTRALE");

                entity.HasIndex(e => e.cbCT_NumPayeur, "ICT_NUMPAYEUR");

                entity.HasIndex(e => e.PI_NoEchange, "ICT_PINOECHANGE");

                entity.HasIndex(e => e.cbCT_Raccourci, "ICT_RACC");

                entity.HasIndex(e => new { e.CT_Sommeil, e.cbCT_Classement, e.cbCT_Num }, "ICT_SOMCLASS");

                entity.HasIndex(e => new { e.CT_Sommeil, e.cbCT_CodePostal, e.cbCT_Num }, "ICT_SOMCODEP");

                entity.HasIndex(e => new { e.CT_Sommeil, e.cbCT_Num }, "ICT_SOMNUM");

                entity.HasIndex(e => new { e.CT_Sommeil, e.CT_Type, e.cbCT_Num }, "ICT_SOMTYPE");

                entity.HasIndex(e => new { e.CT_Sommeil, e.CT_Type, e.cbCT_Classement, e.cbCT_Num }, "ICT_SOMTYPECLASS");

                entity.HasIndex(e => new { e.CT_Sommeil, e.CT_Type, e.cbCT_CodePostal, e.cbCT_Num }, "ICT_SOMTYPECODEP");

                entity.HasIndex(e => new { e.CT_Type, e.cbCT_Num }, "ICT_TYPE");

                entity.HasIndex(e => new { e.CT_Type, e.cbCT_Classement, e.cbCT_Num }, "ICT_TYPECLASS");

                entity.HasIndex(e => new { e.CT_Type, e.cbCT_CodePostal, e.cbCT_Num }, "ICT_TYPECODEP");

                entity.HasIndex(e => e.CT_Num, "UKA_F_COMPTET_CT_Num")
                    .IsUnique();

                entity.Property(e => e.ACODE)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.CA_Num)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CA_NumIFRS)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_NumPrinc)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CREDIT)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Adresse)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Ape)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Assurance).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Classement)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_CodePostal)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.CT_CodeRegion)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Coface)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Commentaire)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Complement)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Contact)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_DATECREATE).HasColumnType("datetime");

                entity.Property(e => e.CT_DateFermeDebut).HasColumnType("datetime");

                entity.Property(e => e.CT_DateFermeFin).HasColumnType("datetime");

                entity.Property(e => e.CT_DateMAJ).HasColumnType("datetime");

                entity.Property(e => e.CT_EMail)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.CT_EdiCode)
                    .HasMaxLength(23)
                    .IsUnicode(false);

                entity.Property(e => e.CT_EdiCodeSage)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Encours).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Facebook)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Identifiant)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Intitule)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.CT_LangueISO2)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CT_LinkedIn)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Num)
                    .IsRequired()
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_NumCentrale)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_NumPayeur)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Pays)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Qualite)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Raccourci)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.CT_RepresentInt)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_RepresentNIF)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Siret)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Site)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique01)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique02)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique03)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique04)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique05)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique06)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique07)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique08)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique09)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Statistique10)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_SvCA).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_SvCotation)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CT_SvDateBilan).HasColumnType("datetime");

                entity.Property(e => e.CT_SvDateCreate).HasColumnType("datetime");

                entity.Property(e => e.CT_SvDateIncid).HasColumnType("datetime");

                entity.Property(e => e.CT_SvDateMaj).HasColumnType("datetime");

                entity.Property(e => e.CT_SvEffectif)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.CT_SvFormeJuri)
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.CT_SvObjetMaj)
                    .HasMaxLength(61)
                    .IsUnicode(false);

                entity.Property(e => e.CT_SvRegul)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CT_SvResultat).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Taux01).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Taux02).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Taux03).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Taux04).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.CT_Telecopie)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Telephone)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Ville)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DATE_FIN_CREDIT).HasColumnType("smalldatetime");

                entity.Property(e => e.Date_Debut_Credit).HasColumnType("smalldatetime");

                entity.Property(e => e.ECHEANCE)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.GP)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.Montant_Credit).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.OBJECTIF_MENSUEL).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.SOLDE).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.TYPE_CLT)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Taux_Ret).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.TypMont)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.anx)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.cbCA_Num)
                    .HasMaxLength(14)
                    .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([CA_Num],'')))", false);

                entity.Property(e => e.cbCG_NumPrinc)
                    .HasMaxLength(14)
                    .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([CG_NumPrinc],'')))", false);

                entity.Property(e => e.cbCT_Classement)
                    .HasMaxLength(18)
                    .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_Classement],'')))", false);

                entity.Property(e => e.cbCT_CodePostal)
                    .HasMaxLength(10)
                    .HasComputedColumnSql("(CONVERT([varbinary](10),isnull([CT_CodePostal],'')))", false);

                entity.Property(e => e.cbCT_Num)
                    .HasMaxLength(18)
                    .HasComputedColumnSql("(CONVERT([varbinary](18),[CT_Num]))", false);

                entity.Property(e => e.cbCT_NumCentrale)
                    .HasMaxLength(18)
                    .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_NumCentrale],'')))", false);

                entity.Property(e => e.cbCT_NumPayeur)
                    .HasMaxLength(18)
                    .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_NumPayeur],'')))", false);

                entity.Property(e => e.cbCT_Raccourci)
                    .HasMaxLength(8)
                    .HasComputedColumnSql("(CONVERT([varbinary](8),isnull([CT_Raccourci],'')))", false);

                entity.Property(e => e.cbCreateur)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.cbCreation).HasColumnType("datetime");

                entity.Property(e => e.cbModification).HasColumnType("datetime");

                entity.HasOne(d => d.cbCO_NoNavigation)
                    .WithMany(p => p.F_COMPTETs)
                    .HasPrincipalKey(p => p.CO_No)
                    .HasForeignKey(d => d.cbCO_No)
                    .HasConstraintName("FKA_F_COMPTET_CO_No");
            });

            modelBuilder.Entity<F_DOCENTETE>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("PK_CBMARQ_F_DOCENTETE");

                entity.ToTable("F_DOCENTETE");

                entity.HasIndex(e => e.cbCA_No, "FKIA_F_DOCENTETE_CA_No");

                entity.HasIndex(e => e.cbDE_No, "FKIA_F_DOCENTETE_DE_No");

                entity.HasIndex(e => e.cbCA_Num, "IDO_ANAL");

                entity.HasIndex(e => new { e.CA_No, e.DO_Attente, e.DO_Date, e.DO_Heure, e.cbDO_Tiers }, "IDO_CAISSE");

                entity.HasIndex(e => e.CO_NoCaissier, "IDO_CAISSIER");

                entity.HasIndex(e => e.cbCT_NumCentrale, "IDO_CENTRALE");

                entity.HasIndex(e => e.cbCG_Num, "IDO_CGNUM");

                entity.HasIndex(e => new { e.DO_Cloture, e.DO_Type, e.DO_Date }, "IDO_CLOTURE");

                entity.HasIndex(e => new { e.DO_Domaine, e.DO_Date, e.cbDO_Tiers, e.DO_Type, e.cbDO_Piece }, "IDO_DATE");

                entity.HasIndex(e => new { e.DO_Domaine, e.DE_No, e.DO_Date, e.cbDO_Tiers, e.DO_Type, e.cbDO_Piece }, "IDO_DATEDEPOT");

                entity.HasIndex(e => e.DE_No, "IDO_DEPOT");

                entity.HasIndex(e => e.LI_No, "IDO_DEPOTCL");

                entity.HasIndex(e => new { e.DO_Domaine, e.DO_Souche }, "IDO_DOMSOUCHE");

                entity.HasIndex(e => e.cbDO_FactureFrs, "IDO_FACTURE");

                entity.HasIndex(e => e.cbCT_NumPayeur, "IDO_NUM");

                entity.HasIndex(e => new { e.DO_Domaine, e.cbDO_PieceOrig }, "IDO_PIECEORIG");

                entity.HasIndex(e => e.CO_No, "IDO_REPRESENT");

                entity.HasIndex(e => new { e.DO_Type, e.DO_Souche, e.cbDO_Piece }, "IDO_SOUCHE");

                entity.HasIndex(e => new { e.DO_Type, e.DO_Date, e.cbDO_Tiers, e.DE_No, e.cbDO_Piece }, "IDO_TDATE");

                entity.HasIndex(e => new { e.DO_Type, e.DE_No, e.DO_Date, e.cbDO_Tiers, e.cbDO_Piece }, "IDO_TDATEDEPOT");

                entity.HasIndex(e => new { e.DO_Domaine, e.cbDO_Tiers, e.DO_Date, e.DO_Type, e.cbDO_Piece }, "IDO_TIERS");

                entity.HasIndex(e => new { e.DO_Domaine, e.cbDO_Tiers, e.DE_No, e.DO_Date, e.DO_Type, e.cbDO_Piece }, "IDO_TIERSDEPOT");

                entity.HasIndex(e => new { e.DO_Type, e.cbDO_Piece }, "IDO_TPIECE")
                    .IsUnique();

                entity.HasIndex(e => new { e.DO_Type, e.cbDO_Tiers, e.DO_Date, e.cbDO_Piece }, "IDO_TTIERS");

                entity.HasIndex(e => new { e.DO_Type, e.cbDO_Tiers, e.DE_No, e.DO_Date, e.cbDO_Piece }, "IDO_TTIERSDEPOT");

                entity.HasIndex(e => e.cbHashOrder, "IHashOrder_F_DOCENTETE");

                entity.Property(e => e.BCVALIDE)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BQ)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BQ_VERS)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CALCUL_TTC).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CA_Num)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CA_NumIFRS)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CG_Num)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CREDIT)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.CT_NumCentrale)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CT_NumPayeur)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DATE_ASSOCIATION_CREDIT).HasColumnType("smalldatetime");

                entity.Property(e => e.DATE_REMBOURSEMENT).HasColumnType("smalldatetime");

                entity.Property(e => e.DO_AdressePaiement)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DO_CodeTaxe1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DO_CodeTaxe2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DO_CodeTaxe3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Contact)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Coord01)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Coord02)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Coord03)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Coord04)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Cours).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_Date).HasColumnType("datetime");

                entity.Property(e => e.DO_DateExpedition).HasColumnType("datetime");

                entity.Property(e => e.DO_DateLivr).HasColumnType("datetime");

                entity.Property(e => e.DO_DateLivrRealisee).HasColumnType("datetime");

                entity.Property(e => e.DO_DebutAbo).HasColumnType("datetime");

                entity.Property(e => e.DO_DebutPeriod).HasColumnType("datetime");

                entity.Property(e => e.DO_Ecart).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_FactureFrs)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DO_FinAbo).HasColumnType("datetime");

                entity.Property(e => e.DO_FinPeriod).HasColumnType("datetime");

                entity.Property(e => e.DO_Heure)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DO_MontantRegle).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_Motif)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.DO_NetAPayer).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_NoWeb)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Piece)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.DO_PieceOrig)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Ref)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Taxe1).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_Taxe2).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_Taxe3).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_Tiers)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DO_TotalHT).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_TotalHTNet).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_TotalTTC).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_TxEscompte).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_ValFrais).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_ValFranco).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.ETAT_FACT).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.FOLIO_S)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LIVREUR)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.MONTANT_CREDIT).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.MONTANT_TTC).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.PIECE)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SOLDE).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.VERSEMENT).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.cbCA_Num)
                    .HasMaxLength(14)
                    .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([CA_Num],'')))", false);

                entity.Property(e => e.cbCG_Num)
                    .HasMaxLength(14)
                    .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([CG_Num],'')))", false);

                entity.Property(e => e.cbCT_NumCentrale)
                    .HasMaxLength(18)
                    .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_NumCentrale],'')))", false);

                entity.Property(e => e.cbCT_NumPayeur)
                    .HasMaxLength(18)
                    .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_NumPayeur],'')))", false);

                entity.Property(e => e.cbCreateur)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('CSQL')")
                    .IsFixedLength(true);

                entity.Property(e => e.cbCreation)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([datetime2](0),getdate()))");

                entity.Property(e => e.cbDO_FactureFrs)
                    .HasMaxLength(36)
                    .HasComputedColumnSql("(CONVERT([varbinary](36),isnull([DO_FactureFrs],'')))", false);

                entity.Property(e => e.cbDO_Piece)
                    .HasMaxLength(14)
                    .HasComputedColumnSql("(CONVERT([varbinary](14),space((14)-(len([DO_Piece])+(1)))+[DO_Piece]))", false);

                entity.Property(e => e.cbDO_PieceOrig)
                    .HasMaxLength(14)
                    .HasComputedColumnSql("(CONVERT([varbinary](14),space((14)-(len([DO_PieceOrig])+(1)))+[DO_PieceOrig]))", false);

                entity.Property(e => e.cbDO_Tiers)
                    .HasMaxLength(18)
                    .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([DO_Tiers],'')))", false);

                entity.Property(e => e.cbFlag).HasDefaultValueSql("((0))");

                entity.Property(e => e.cbHash).HasMaxLength(32);

                entity.Property(e => e.cbHashDate).HasColumnType("datetime");

                entity.Property(e => e.cbHashVersion).HasDefaultValueSql("((1))");

                entity.Property(e => e.cbModification)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([datetime2](0),getdate()))");

                entity.Property(e => e.cbProt).HasDefaultValueSql("((0))");

                entity.Property(e => e.cbReplication).HasDefaultValueSql("((0))");

                entity.HasOne(d => d.CT_NumCentraleNavigation)
                    .WithMany(p => p.F_DOCENTETECT_NumCentraleNavigations)
                    .HasPrincipalKey(p => p.CT_Num)
                    .HasForeignKey(d => d.CT_NumCentrale)
                    .HasConstraintName("FKA_CPTAF_DOCENTETE_CT_NumCentrale");

                entity.HasOne(d => d.CT_NumPayeurNavigation)
                    .WithMany(p => p.F_DOCENTETECT_NumPayeurNavigations)
                    .HasPrincipalKey(p => p.CT_Num)
                    .HasForeignKey(d => d.CT_NumPayeur)
                    .HasConstraintName("FKA_CPTAF_DOCENTETE_CT_NumPayeur");

                entity.HasOne(d => d.cbCO_NoNavigation)
                    .WithMany(p => p.F_DOCENTETEcbCO_NoNavigations)
                    .HasPrincipalKey(p => p.CO_No)
                    .HasForeignKey(d => d.cbCO_No)
                    .HasConstraintName("FKA_CPTAF_DOCENTETE_RE_NO");

                entity.HasOne(d => d.cbCO_NoCaissierNavigation)
                    .WithMany(p => p.F_DOCENTETEcbCO_NoCaissierNavigations)
                    .HasPrincipalKey(p => p.CO_No)
                    .HasForeignKey(d => d.cbCO_NoCaissier)
                    .HasConstraintName("FKA_CPTAF_DOCENTETE_RE_NOCAISSIER");
            });

            modelBuilder.Entity<F_DOCLIGNE>(entity =>
            {
                entity.HasKey(e => e.cbMarq)
                    .HasName("PK_CBMARQ_F_DOCLIGNE");

                entity.ToTable("F_DOCLIGNE");

                entity.HasIndex(e => e.AR_Ref, "FKIA_F_DOCLIGNE_AR_Ref");

                entity.HasIndex(e => e.cbDE_No, "FKIA_F_DOCLIGNE_DE_No");

                entity.HasIndex(e => e.cbDL_NoLink, "FKIA_F_DOCLIGNE_DL_NoLink");

                entity.HasIndex(e => e.RP_Code, "FKIA_F_DOCLIGNE_RP_Code");

                entity.HasIndex(e => e.cbCA_Num, "IDL_ANAL");

                entity.HasIndex(e => new { e.cbAR_Ref, e.AG_No1, e.AG_No2 }, "IDL_ARTGAM");

                entity.HasIndex(e => new { e.cbAR_Ref, e.AG_No2 }, "IDL_ARTGAM2");

                entity.HasIndex(e => new { e.DO_Type, e.cbDO_Piece, e.cbAR_RefCompose }, "IDL_COMPOSE");

                entity.HasIndex(e => new { e.DE_No, e.cbAR_Ref, e.AG_No1, e.AG_No2, e.DO_Type }, "IDL_DEPOT");

                entity.HasIndex(e => new { e.DO_Type, e.cbDO_Piece, e.DL_TRemPied, e.DL_Ligne }, "IDL_LIGNE");

                entity.HasIndex(e => e.DL_No, "IDL_NO")
                    .IsUnique();

                entity.HasIndex(e => e.DL_NoLink, "IDL_NOLINK");

                entity.HasIndex(e => e.DL_NoSousTotal, "IDL_NOSOUSTOTAL");

                entity.HasIndex(e => new { e.DO_Domaine, e.cbDL_PieceBC }, "IDL_PIECECOM");

                entity.HasIndex(e => new { e.DO_Domaine, e.cbDL_PieceDE }, "IDL_PIECEDE");

                entity.HasIndex(e => new { e.DO_Domaine, e.DL_TypePL, e.cbDL_PieceBL }, "IDL_PIECELIVR");

                entity.HasIndex(e => new { e.DO_Domaine, e.cbDL_PiecePL }, "IDL_PIECEPL");

                entity.HasIndex(e => e.cbPF_Num, "IDL_PROJET");

                entity.HasIndex(e => new { e.DO_Type, e.cbDO_Piece, e.cbAR_Ref, e.AG_No1, e.AG_No2, e.DL_NoRef }, "IDL_REF");

                entity.HasIndex(e => new { e.DO_Type, e.cbDO_Piece, e.cbAF_RefFourniss }, "IDL_REFFOUR");

                entity.HasIndex(e => new { e.DO_Domaine, e.cbDO_Ref }, "IDL_REFLIG");

                entity.HasIndex(e => e.CO_No, "IDL_REPRESENT");

                entity.HasIndex(e => e.cbRP_Code, "IDL_RESSOURCE");

                entity.HasIndex(e => new { e.DE_No, e.cbAR_Ref, e.AG_No1, e.AG_No2, e.DL_MvtStock, e.DL_DateBL }, "IDL_STOCK");

                entity.HasIndex(e => new { e.cbCT_Num, e.DO_Date }, "IDL_TIERS");

                entity.HasIndex(e => e.cbHashOrder, "IHashOrder_F_DOCLIGNE");

                entity.Property(e => e.AC_RefClient)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AF_RefFourniss)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AR_Ref)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.AR_RefCompose)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.CA_Num)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.CT_Num)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DL_CMUP).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_CodeTaxe1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DL_CodeTaxe2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DL_CodeTaxe3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DL_DateAvancement).HasColumnType("datetime");

                entity.Property(e => e.DL_DateBC).HasColumnType("datetime");

                entity.Property(e => e.DL_DateBL).HasColumnType("datetime");

                entity.Property(e => e.DL_DateDE).HasColumnType("datetime");

                entity.Property(e => e.DL_DatePL).HasColumnType("datetime");

                entity.Property(e => e.DL_Design)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.DL_Frais).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_MontantHT).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_MontantTTC).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_No).IsRequired();

                entity.Property(e => e.DL_NoColis)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.DL_Operation)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.DL_PUBC).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_PUDevise).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_PUTTC).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_PieceBC)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.DL_PieceBL)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.DL_PieceDE)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.DL_PiecePL)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.DL_PoidsBrut).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_PoidsNet).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_PrixRU).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_PrixUnitaire).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Qte).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_QteBC).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_QteBL).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_QteDE).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_QtePL).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Remise01REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Remise02REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Remise03REM_Valeur).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Taxe1).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Taxe2).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DL_Taxe3).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.DO_Date).HasColumnType("datetime");

                entity.Property(e => e.DO_DateLivr).HasColumnType("datetime");

                entity.Property(e => e.DO_Piece)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.DO_Ref)
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.EU_Enumere)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.EU_Qte).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.PF_Num)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Qte_Colise).HasColumnType("numeric(24, 6)");

                entity.Property(e => e.RP_Code)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.cbAF_RefFourniss)
                    .HasMaxLength(20)
                    .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AF_RefFourniss],'')))", false);

                entity.Property(e => e.cbAR_Ref)
                    .HasMaxLength(20)
                    .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AR_Ref],'')))", false);

                entity.Property(e => e.cbAR_RefCompose)
                    .HasMaxLength(20)
                    .HasComputedColumnSql("(CONVERT([varbinary](20),isnull([AR_RefCompose],'')))", false);

                entity.Property(e => e.cbCA_Num)
                    .HasMaxLength(14)
                    .HasComputedColumnSql("(CONVERT([varbinary](14),isnull([CA_Num],'')))", false);

                entity.Property(e => e.cbCT_Num)
                    .HasMaxLength(18)
                    .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([CT_Num],'')))", false);

                entity.Property(e => e.cbCreateur)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('CSQL')")
                    .IsFixedLength(true);

                entity.Property(e => e.cbCreation)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([datetime2](0),getdate()))");

                entity.Property(e => e.cbDL_PieceBC)
                    .HasMaxLength(14)
                    .HasComputedColumnSql("(CONVERT([varbinary](14),space((14)-(len([DL_PieceBC])+(1)))+[DL_PieceBC]))", false);

                entity.Property(e => e.cbDL_PieceBL)
                    .HasMaxLength(14)
                    .HasComputedColumnSql("(CONVERT([varbinary](14),space((14)-(len([DL_PieceBL])+(1)))+[DL_PieceBL]))", false);

                entity.Property(e => e.cbDL_PieceDE)
                    .HasMaxLength(14)
                    .HasComputedColumnSql("(CONVERT([varbinary](14),space((14)-(len([DL_PieceDE])+(1)))+[DL_PieceDE]))", false);

                entity.Property(e => e.cbDL_PiecePL)
                    .HasMaxLength(14)
                    .HasComputedColumnSql("(CONVERT([varbinary](14),space((14)-(len([DL_PiecePL])+(1)))+[DL_PiecePL]))", false);

                entity.Property(e => e.cbDO_Piece)
                    .HasMaxLength(14)
                    .HasComputedColumnSql("(CONVERT([varbinary](14),space((14)-(len([DO_Piece])+(1)))+[DO_Piece]))", false);

                entity.Property(e => e.cbDO_Ref)
                    .HasMaxLength(18)
                    .HasComputedColumnSql("(CONVERT([varbinary](18),isnull([DO_Ref],'')))", false);

                entity.Property(e => e.cbFlag).HasDefaultValueSql("((0))");

                entity.Property(e => e.cbHash).HasMaxLength(32);

                entity.Property(e => e.cbHashDate).HasColumnType("datetime");

                entity.Property(e => e.cbHashVersion).HasDefaultValueSql("((1))");

                entity.Property(e => e.cbModification)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([datetime2](0),getdate()))");

                entity.Property(e => e.cbPF_Num)
                    .HasMaxLength(10)
                    .HasComputedColumnSql("(CONVERT([varbinary](10),space((10)-(len([PF_Num])+(1)))+[PF_Num]))", false);

                entity.Property(e => e.cbProt).HasDefaultValueSql("((0))");

                entity.Property(e => e.cbRP_Code)
                    .HasMaxLength(12)
                    .HasComputedColumnSql("(CONVERT([varbinary](12),isnull([RP_Code],'')))", false);

                entity.Property(e => e.cbReplication).HasDefaultValueSql("((0))");

                entity.Property(e => e.unite)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.HasOne(d => d.AR_RefNavigation)
                    .WithMany(p => p.F_DOCLIGNEs)
                    .HasPrincipalKey(p => p.AR_Ref)
                    .HasForeignKey(d => d.AR_Ref)
                    .HasConstraintName("FKA_F_DOCLIGNE_AR_Ref");

                entity.HasOne(d => d.cbCO_NoNavigation)
                    .WithMany(p => p.F_DOCLIGNEs)
                    .HasPrincipalKey(p => p.CO_No)
                    .HasForeignKey(d => d.cbCO_No)
                    .HasConstraintName("FKA_CPTAF_DOCLIGNE_RE_NO");

                entity.HasOne(d => d.cbDL_NoLinkNavigation)
                    .WithMany(p => p.InversecbDL_NoLinkNavigation)
                    .HasPrincipalKey(p => p.DL_No)
                    .HasForeignKey(d => d.cbDL_NoLink)
                    .HasConstraintName("FKA_F_DOCLIGNE_DL_NoLink");
            });

            modelBuilder.Entity<N1Clt>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("N1Clt");

                entity.Property(e => e.Adresse)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Categorie_Tarifaire)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Code_Commercial)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.Id_Client)
                    .IsRequired()
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.Nom_Client)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.Nom_Commercial)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Pays)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Region)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.Telephone)
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.Ville)
                    .HasMaxLength(35)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<N4>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("N4");

                entity.Property(e => e.CodeArt)
                    .IsRequired()
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.Designation)
                    .HasMaxLength(69)
                    .IsUnicode(false);

                entity.Property(e => e.N1)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.N2)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.N3)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.N41)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("N4");

                entity.Property(e => e.Photo)
                    .HasMaxLength(259)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VM_Collaborateur>(entity =>
            {
                entity.ToTable("VM_Collaborateur");

                entity.Property(e => e.CT_Num)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Login)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nom)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Prenom)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Psw)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegistrationID).IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}